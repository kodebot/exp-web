@page "/"
@using TicTacToe.Core
@using TicTacToe.Core.Extensions
@using TicTacToe.Core.PlayerBot

<style>
    
    .game-container{
        width:300px;
        margin:0 auto;
    }

    .board{
        position: relative;
        width: 100%;
        width:306px;
    }

    .hide{
        visibility:hidden;
    }

</style>

<div class="game-container">
    <StatusCard Status="game.Status" />
    <div>
        <div class="text-right p-2 @HideRestartCssClass()">
            <button class="btn btn-outline-danger btn-sm" @onclick="OnRestart"> <span class="oi oi-loop-circular"></span> Restart</button>
        </div>
       
        <div class="board">
            <BoardTable Board="game.Board" OnCellSelected="CellSelected"></BoardTable>
            <StatusOverlay Status="game.Status" OnRestart="OnRestart" OnStart="OnStart"></StatusOverlay>
        </div>
    </div>

    <div class="hide">
        0. allow restart
        1. strike across winning cells
        2. use cartoony fonts
        3. use random pictures for noughts and crosses
        4. display when the result is tie (display the game is over and break the infinite loop)
    </div>
</div>
@code {
  Game game = new Game(new RandomPlayerBot());

  private void OnRestart()
  {
      game = new Game(new RandomPlayerBot());
      game.Start();
  }

  private void OnStart()
  {
      game.Start();
  }

  private async Task CellSelected(Coordinates coords)
  {
      // ignore any selection when it is not Player1's turn
      if (game.Status == GameStatus.Player1Turn){
          await game.Play(coords.X, coords.Y);
      }
  }

  private string HideRestartCssClass()
  {
      if(!game.Status.IsInProgress())
      {
          return "hide";
      }

      return String.Empty;
  }
}
